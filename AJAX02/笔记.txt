AJAX发送post请求
    1.请求数据要放在send()提交的
    var xhr = createXhr();
    xhr.open("post","xxx",true)
    xhr.onreadystatechange = function(){
        xxxx xxxx
    }
    xhr.send("uname=wangwc&uage=35")
    2.Content-Type的问题
    AJAX的请求,默认会将Content-Type消息头的值改为"text/plain",所以导致无法获取
    解决方案:将Content-Type的值改为"application/x-www-form-lencoded"即可
    xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
2.JSON
    1.JSON介绍
        JSON:JavaScript Object Notation
             JS         对象    表现形式
        将复杂结构的字符串转换成JS对象的表现形式,方便前端解析
    2.JSON的表现
        1.使用{}表示一个对象
        2.在{}中使用key:value的形式来表示属性(数据)
        3.key必须使用""引起来
        4.value如果是字符串的话,也必须使用""引起来
        5.多对 key:value之间使用,隔开
    3.使用JSON表示一个数组
        1.使用[]来表示一个数组
        2.数组中允许包含若干字符串或JS对象
            1.使用JSON数组来表示若干字符串
                var arr = ["王老师","王夫人","王小超"];
            2.使用JSON数组表示若干对象
                通过一个数组保存3个人的新消息(name,age,gender)
                var arr = [
                 {
                    "name":"王老师",
                    "age":40,
                    "gender":"男"
                 },
                 {
                    "name":"王夫人",
                    "age":40,
                    "gender":"男"
                 },
                 {
                    "name":"王小超",
                    "age":12,
                    "gender":"男"
                 },
                ];
        3.使用jq循环遍历数组
            1.$arr.each();
                $arr:jQuery中的数组
                语法:
                    $arr.each(function(i,obj){
                        i:遍历出来的元素下标
                        obj:遍历出来的元素
                    });
            2.$each()
                $ -> jQuery
                语法:$.each(arr,function(i,obj){

                });
        4.后台处理JSON
            1.前后端JSON的处理流程
                1.后端查询出/得到复杂结构的数据
                2.在后端将复杂结构的数据转换成符合JSON格式的字符串
                3.在后端将JSON格式的字符串响应给前端
                4.在前端将JSON格式的字符串再转换为JS对象/数组
                5.在前端对JS对象/数组进行循环遍历/取值操作
            2.Python中的JSON处理
                在python中可以使用json类完成JSON的转换
                import json
                jsonStr = json.dumps(元祖|列表|字典)
                return jsonStr
            3.前端中的JSON处理
                由于服务器端响应回来的数据时String,所以在前端对复杂结构
                的数据必须先转换成JS对象或数组,然后再取值或循环遍历
                    在JS中:
                    var js对象 = JSON.parse(JSON字符串)
